name: Build and Upload Kali Image to DigitalOcean

on:
  workflow_dispatch:

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to the latest version

      # Read the current version number from version.txt
      - name: Read current release version
        id: get_version
        run: |
          if [ ! -f version.txt ]; then
            echo "v1.0.0" > version.txt  # Initialize version.txt if it doesn't exist
          fi
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Increment the version number (increase major version and reset minor and patch to 0)
      - name: Increment release version
        run: |
          MAJOR_VERSION=$(echo $VERSION | cut -d. -f1 | cut -c2-)  # Extract major version
          NEXT_MAJOR_VERSION=$((MAJOR_VERSION + 1))  # Increment major version
          NEW_VERSION="v$NEXT_MAJOR_VERSION.0.0"  # Reset minor and patch versions
          echo $NEW_VERSION > version.txt
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Commit the updated version.txt file back to the repository
      - name: Commit new version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "Increment release version to $NEW_VERSION"
          git push

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.0  # Updated to the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}  # Use the new version as the tag name
          release_name: "Kali Linux Image ${{ env.NEW_VERSION }}"
          draft: false
          prerelease: false

      - name: Upload Compressed Image to Release
        uses: actions/upload-release-asset@v2  # Updated to the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./disk.raw.gz
          asset_name: disk.raw.gz
          asset_content_type: application/gzip

      - name: Upload to DigitalOcean
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          REGION: ${{ secrets.REGION }}
        run: |
          curl -X POST "https://api.digitalocean.com/v2/images" \
          -H "Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{
                \"name\": \"Kali from GitHub Action\",
                \"url\": \"https://github.com/${{ github.repository }}/releases/download/${{ env.NEW_VERSION }}/disk.raw.gz\",
                \"distribution\": \"Debian\",
                \"regions\": [\"${{ env.REGION }}\"],
                \"architecture\": \"x86_64\",
                \"description\": \"Custom Kali Linux image\",
                \"tags\": [\"kali\"]
              }"
